View(dta2)
dta2<-read_xml("local/EXC2020/DD23/data/c0_Der_Besuch__Klemm_.xhtml") #xml extracted from epub
data<-dta2
data %>% xml_ns()
data%>% xml_ns_strip()
data_sf<-data
View(data)
dta2<-read_xml("data/c0_Der_Besuch_Klemm_wsource_epub.xml") #xml extracted from epub
# x<-GET(src) #no
# dta2<-content(x,"text")
getwd()
setwd("~/Documents/GIT/ETCRA5_dd23/R")
dta2<-read_xml("data/c0_Der_Besuch_Klemm_wsource_epub.xml") #xml extracted from epub
data<-dta2
data %>% xml_ns()
data%>% xml_ns_strip()
data_sf<-data
xml_text(all_i[2])
txtall_p[4] #includes speaker declaration, i.e. first wrap speaker, then p
all_p<- data %>%
xml_find_all('//div/p')
txtall_p<-xml_text(all_p)
txtall_p[4] #includes speaker declaration, i.e. first wrap speaker, then p
regx2<-"\n"
x2<-gsub(regx2," ",txtall_p,perl = T)
x2
regx1<-"((?<=</speaker>)(.*))"
repl1<-"<p>\\2</p>"
grep(regx1,txtall_p[4],perl = T,value = T)
#grep(regx1,txtall_p[4],perl = T,value = T)
x<-gsub(regx1,repl1,txtall_p[4],perl = T)
x
sp1
View(all_b)
# Alle xpath-Pfade zu einem head-Element anzeigen
all_heads <- data %>%
xml_find_all('//div') %>%
xml_path()
all_heads
all_divs <- data %>%
xml_find_all('//div/div')
xml_text(all_divs[1])
xml_attr(all_divs[6],"style")
xml_text(all_divs)
#all speakerlist in scene
all_i <- data %>%
xml_find_all('//div/div/i')
xml_text(all_i[2])
xml_text(all_i)
#all speaker declaration of scene paragraph
all_b <- data %>%
xml_find_all('//div/p/b')
txtall_b<-xml_text(all_b)
sp1<-paste0("<speaker>",txtall_b,"</speaker>")
sp1
xml_text(all_b)<-sp1
all_p<- data %>%
xml_find_all('//div/p')
txtall_p<-xml_text(all_p)
txtall_p[4] #includes speaker declaration, i.e. first wrap speaker, then p
regx2<-"\n"
x2<-gsub(regx2," ",txtall_p,perl = T)
x2
regx1<-"((?<=</speaker>)(.*))"
repl1<-"<p>\\2</p>"
grep(regx1,txtall_p[4],perl = T,value = T)
x<-gsub(regx1,repl1,txtall_p[4],perl = T)
x
x<-gsub(regx1,repl1,x2,perl = T)
x[4]
x3<-paste0("<sp>",x,"</sp>")
x3[4]
View(data)
x3[4]
View(data)
#<div <b = <div type scene <head>
#<div <i = <stage>
#<p <b = <speaker
#<p = <p
#</div> (scene)
# >>> concenate 2 div + p til next div
# : find div which has style <b>, then include following til next <div><b>
########
all_div_b <- data %>%
xml_find_all('//div/div/b')
xml_text(all_i[2])
xml_text(all_div_b[2])
xml_text(all_div_b)
xml_text(all_divs)
xml_text(all_div_b)
txt_all_div_b<-xml_text(all_div_b)
m<-grep("(Akt|Auftritt|Szene|Scene",txt_all_div_b)
m<-grep("(Akt|Auftritt|Szene|Scene)",txt_all_div_b)
x3[4]
x3[3]
#get global position of each <b> to set start / end of scene
num_div_b <- data %>%
xml_find_num('//div/div/b')
#get global position of each <b> to set start / end of scene
num_div_b <- data %>%
xml_find_lgl('//div/div/b')
all_div_b <- data %>%
xml_find_all('//div/div/b',flatten=F)
xml_text(all_div_b[2])
View(all_div_b)
all_div_b <- data %>%
xml_find_all('//div/div/b',flatten=T)
View(all_div_b)
xml_text(all_div_b[2])
# Find all vs find one -----------------------------------------------------
x <- read_xml("<body>
<p>Some <b>text</b>.</p>
<p>Some <b>other</b> <b>text</b>.</p>
<p>No bold here!</p>
</body>")
para <- xml_find_all(x, ".//p")
View(para)
# If you set flatten to FALSE, though, xml_find_all will return a list of
# nodesets, where each nodeset contains the matches for the corresponding
# node in the original nodeset.
xml_find_all(para, ".//b", flatten = FALSE)
# By default, if you apply xml_find_all to a nodeset, it finds all matches,
# de-duplicates them, and returns as a single nodeset. This means you
# never know how many results you'll get
xml_find_all(para, ".//b")
# By default, if you apply xml_find_all to a nodeset, it finds all matches,
# de-duplicates them, and returns as a single nodeset. This means you
# never know how many results you'll get
xml_find_all(para, ".//b")
# If you set flatten to FALSE, though, xml_find_all will return a list of
# nodesets, where each nodeset contains the matches for the corresponding
# node in the original nodeset.
xml_find_all(para, ".//b", flatten = FALSE)
# Find all vs find one -----------------------------------------------------
x <- read_xml("<body>
<p>Some <b>text</b>.</p>
<p>a2nd</p>
<p>a3rd</p>
<p>Some <b>other</b> <b>text</b>.</p>
<p>b1 No bold here!</p>
<p>b2</p>
</body>")
para <- xml_find_all(x, ".//p")
# By default, if you apply xml_find_all to a nodeset, it finds all matches,
# de-duplicates them, and returns as a single nodeset. This means you
# never know how many results you'll get
xml_find_all(para, ".//b")
xml_find_num(para,".//b")
b<-xml_find_num(para,".//b")
# By default, if you apply xml_find_all to a nodeset, it finds all matches,
# de-duplicates them, and returns as a single nodeset. This means you
# never know how many results you'll get
b<-xml_find_all(para, ".//b")
xml_path(b)
#get global position of each <b> to set start / end of scene
xml_path(all_div_b)
#get global position of each <b> to set start / end of scene
l1<-xml_path(all_div_b)
data%>%xml_text(l1[5])
data%>%xml_find_all(l1[5])
data%>%xml_find_all(l1[6])
data%>%xml_find_all(l1[7])
data%>%xml_find_all(l1[7:10])
data%>%xml_find_all(l1[8])
data%>%xml_find_all(l1[9])
data%>%xml_find_all(l1[10])
l1
l2<-stri_extract_all(l1,"[0-9]{1,3}")
l2<-stri_extract_all(l1,regex="[0-9]{1,3}")
l2<-unlist(stri_extract_all(l1,regex="[0-9]{1,3}"))
source("~/Documents/GIT/HU-LX/scripts/20230129_transcript_preprocessing(cpt)_2.9.R", echo=TRUE)
# 1. global variables
#setwd("~")
#getwd()
path_home()
#codesource<-paste0(path_home(),"/Documents/GitHub/DH_essais/sections/HU-LX/codes_cpt4mod.csv")
#######
#mini
#setwd("~/boxHKW/21S/DH/")
#lapsi, ewa
setwd("~/boxHKW/UNI/21S/DH/")
source("~/Documents/GIT/HU-LX/scripts/20230129_transcript_preprocessing(cpt)_2.9.R", echo=TRUE)
getwd()
list.files(dirtext)
dirtext<-paste0(getwd(),"/local/HU-LX/000_SES_REFORMATTED_transcripts/Formatted with header info/text")
#dirtext<-paste0(getwd(),"/local/HU-LX/000_SES_REFORMATTED_transcripts/Formatted with header info/text")
#2nd run with all 32 transcripts formatted from docx > txt
dirtext<-paste0(getwd(),"/local/HU-LX/000_SES_REFORMATTED_transcripts/Formatted with header info/docx-txt")
list.files(dirtext)
#dirtext<-paste0(getwd(),"/local/HU-LX/000_SES_REFORMATTED_transcripts/Formatted with header info/text")
#2nd run with all 32 transcripts formatted from docx > txt
dirtext<-paste0(getwd(),"/local/HU-LX/000_SES_REFORMATTED_transcripts/Formatted with header info/text/docx-txt")
list.files(dirtext)
source("~/Documents/GIT/HU-LX/scripts/20230129_transcript_preprocessing(cpt)_2.9.R", echo=TRUE)
source("~/Documents/GIT/HU-LX/scripts/20230129_transcript_preprocessing(cpt)_2.9.R", echo=TRUE)
source("~/Documents/GIT/HU-LX/scripts/20230129_transcript_preprocessing(cpt)_2.9.R", echo=TRUE)
#save codes table
getwd()
source("~/Documents/GIT/HU-LX/scripts/20230129_transcript_preprocessing(cpt)_2.9.R", echo=TRUE)
getwd()
d<-read.csv("local/HU-LX/SES/run32_newcodes.csv")
View(d)
c<-unique(d$code)
write.csv(c,"local/HU-LX/SES/codesmissing.csv")
View(d)
install.packages("DramaAnalysis", lib="/Library/Frameworks/R.framework/Versions/4.1/Resources/library")
#### 13173.
library(DramaAnalysis)
setwd("~/Documents/GIT/ETCRA5_dd23/R")
installData("tg","data/qd")
qd<-loadAllInstalledIds(asDataFrame = T)
qd<-loadAllInstalledIds(dataDirectory="corpus/qd",asDataFrame = T)
qd<-loadAllInstalledIds(dataDirectory ="corpus/qd/tg/csv",asDataFrame = T)
qd<-loadAllInstalledIds(dataDirectory ="data/qd/tg/csv",asDataFrame = T)
qd<-loadAllInstalledIds(dataDirectory ="data/qd/tg/csv")
qd<-loadAllInstalledIds(dataDirectory ="data/qd/tg/")
qd<-loadAllInstalledIds(dataDirectory ="data/qd/")
qddf<-loadAllInstalledIds(dataDirectory ="data/qd/",asDataFrame = T)
View(qddf)
qdmeta<-lapply(qddf$X3,lm)
loadMeta(qddf$X3[1])
loadMeta(list.files("data/qd/tg/csv"))
qdmeta<-lapply(qd,lm)
View(qddf)
loadMeta(qddf$X3[1])
setDataDirectory(dataDirectory = "data/qd")
loadMeta(qddf$X3[1])
qdmeta<-lapply(qddf,lm)
qdmeta<-lapply(qddf$X3,lm)
qdmeta<-lapply(qd,lm)
lm<-function()print()
qdmeta<-lapply(qd,lm)
lm<-function()print(x)
qdmeta<-lapply(qd,lm)
lm<-function()paste0(x,"drama")
qdmeta<-lapply(qd,lm)
lm<-function()paste0("drama")
qdmeta<-lapply(qd,lm)
lapply(qd,lm)
lm<-function() paste0(x,"drama")
qdmeta<-lapply(qd,lm)
lm<-function(x) paste0(x,"drama")
qdmeta<-lapply(qd,lm)
lm<-function(x) loadMeta(x)
qdmeta<-lapply(qd,lm)
View(qdmeta)
qdm<-as.data.frame(qdmeta)
qdm<-data.frame(qdmeta)
View(qdm)
qdm<-matrix(qdmeta)
View(qdmeta)
library(xml2)
View(qdmeta)
attr(qdmeta[1],"language")
View(qdmeta)
attr(qdmeta[[1]],"language")
qdmeta[[1]]
report(qddf$X3[1])
report(qddf$X3[2])
f<-loadDrama(qddf$X3[1])
setDataDirectory(dataDirectory = "data")
qdmeta[[1]]
f<-loadDrama(qddf$X3[1])
setDataDirectory(dataDirectory = "data/qd/tg")
f<-loadDrama(qddf$X3[1])
setDataDirectory(dataDirectory = "data/")
f<-loadDrama(qddf$X3[1])
setDataDirectory(dataDirectory = "data")
f<-loadDrama(qddf$X3[1])
setDataDirectory(dataDirectory = "data")
f<-loadDrama(qddf$X3[1])
setDataDirectory(dataDirectory = "data/qd")
f<-loadDrama(qddf$X3[1])
setDataDirectory(dataDirectory = "data/qd/tg")
f<-loadDrama(qddf$X3[1])
setDataDirectory(dataDirectory = "data")
f<-loadDrama(qddf$X3[1])
setDataDirectory(dataDirectory = "data/tg")
f<-loadDrama(qddf$X3[1])
f<-loadDrama(qddf$X3[1])
f<-loadDrama(qddf$X3[1])
f<-loadDrama(qddf$X3[2])
f<-loadDrama(qddf$X3[3])
f<-loadDrama(qddf$X3[4])
f<-loadDrama(qddf$X3[5])
setDataDirectory(dataDirectory = "data/tg/csv")
f<-loadDrama(qddf$X3[5])
f<-loadDrama("tg:11dtg0")
setDataDirectory(dataDirectory = "data")
f<-loadDrama("tg:11dtg0")
setDataDirectory(dataDirectory = "data/tg")
f<-loadDrama("tg:11dtg0")
f<-loadDrama("tg:11dtg.0")
installData("test")
f<-loadDrama("test:11dtg.0")
f<-loadDrama("test:rjmw.0")
report(f)
report("test:rjmw.0")
loadMeta("test:rjmw.0")
presence("test:rjmw.0")
presence(f)
setDataDirectory(dataDirectory = "data/corpus")
installData("test")
installData("qd")
installData("tg")
qddf<-loadAllInstalledIds(asDataFrame = T)
View(qddf)
lm<-function(x) loadMeta(x)
dmeta<-loadMeta(qddf)
dmeta<-loadMeta(qddf$X3)
View(dmeta)
presence(dmeta$drama[1])
presence(paste0(dmeta$corpus[1],":",dmeta$drama[1]))
presence("test:rjmw.0")
presence(f)
dpres<-function(nr){
f<-loadDrama(paste0(dmeta$corpus[nr],":",dmeta$drama[nr]))
presence(f)
)
dpres(1)
dpres<-function(nr){
f<-loadDrama(paste0(dmeta$corpus[nr],":",dmeta$drama[nr]))
presence(f)
}
dpres(1)
dpres(2)
dpres(100)
m<-dmeta$corpus=="qd"
m<-which(dmeta$corpus=="qd")
m<-grep("qd",dmeta$corpus)
m<-grep("tg",dmeta$corpus)
View(qddf)
View(dmeta)
View(qddf)
View(qddf)
dpres(513)
View(qddf)
dpres(511)
nr<-511
dmeta$corpus[nr]
m<-grep("test",dmeta$corpus)
dpres<-function(nr){
#  f<-loadDrama(paste0(dmeta$corpus[nr],":",dmeta$drama[nr]))
f<-loadDrama(paste0(qddf$X1[nr],":",qddf$X3[nr]))
presence(f)
}
dpres(511)
dpres(513)
dpres(510)
dpres(509)
dpres<-function(nr){
#  f<-loadDrama(paste0(dmeta$corpus[nr],":",dmeta$drama[nr]))
m<-loadMeta(paste0(qddf$X1[nr],":",qddf$X3[nr]))
f<-loadDrama(paste0(qddf$X1[nr],":",qddf$X3[nr]))
print(m)
presence(f)
}
dpres(509)
dpres<-function(nr){
#  f<-loadDrama(paste0(dmeta$corpus[nr],":",dmeta$drama[nr]))
m<-loadMeta(paste0(qddf$X1[nr],":",qddf$X3[nr]))
f<-loadDrama(paste0(qddf$X1[nr],":",qddf$X3[nr]))
print(m[c(1:5,9)])
presence(f)
}
dpres(509)
dpres<-function(nr){
#  f<-loadDrama(paste0(dmeta$corpus[nr],":",dmeta$drama[nr]))
m<-loadMeta(paste0(qddf$X1[nr],":",qddf$X3[nr]))
f<-loadDrama(paste0(qddf$X1[nr],":",qddf$X3[nr]))
print(m[c(1:5)])
presence(f)
}
dpres(509)
dpres<-function(nr){
#  f<-loadDrama(paste0(dmeta$corpus[nr],":",dmeta$drama[nr]))
m<-loadMeta(paste0(qddf$X1[nr],":",qddf$X3[nr]))
f<-loadDrama(paste0(qddf$X1[nr],":",qddf$X3[nr]))
print(m[,c(1:5,9)])
presence(f)
}
dpres(509)
dpres(1)
dpres<-function(nr){
#  f<-loadDrama(paste0(dmeta$corpus[nr],":",dmeta$drama[nr]))
m<-loadMeta(paste0(qddf$X1[nr],":",qddf$X3[nr]))
f<-loadDrama(paste0(qddf$X1[nr],":",qddf$X3[nr]))
print(m[,c(1:5,9)])
presence(f)
return(f)
}
#presence("test:rjmw.0")
#m<-grep("test",dmeta$corpus)
d1<-dpres(1)
dpres<-function(nr){
#  f<-loadDrama(paste0(dmeta$corpus[nr],":",dmeta$drama[nr]))
m<-loadMeta(paste0(qddf$X1[nr],":",qddf$X3[nr]))
f<-loadDrama(paste0(qddf$X1[nr],":",qddf$X3[nr]))
print(m[,c(1:5,9)])
print(presence(f))
return(f)
}
#presence("test:rjmw.0")
#m<-grep("test",dmeta$corpus)
d1<-dpres(1)
report(d1)
nr<-1
report(paste0(qddf$X1[nr],":",qddf$X3[nr]))
paste0(qddf$X1[nr],":",qddf$X3[nr])
#report(paste0(qddf$X1[nr],":",qddf$X3[nr]))
frequencytable(d1)
#report(paste0(qddf$X1[nr],":",qddf$X3[nr]))
ff<-frequencytable(d1)
View(ff)
ff<-transpose(ff)
ff<-t(ff)
ff<-ff[order(ff[,2])]
ff<-ff[order(ff[,2]),]
ff<-ff[order(ff[,])]
#report(paste0(qddf$X1[nr],":",qddf$X3[nr]))
ff<-frequencytable(d1)
ff<-t(ff)
ff2<-ff[,order(ff[,])]
fdf<-data.frame(token=rownames(ff),count=ff[,1])
View(fdf)
ff2<-fdf[order(ff[,]),]
View(ff2)
ff2<-fdf[order(ff[,],decreasing = T),]
library(quanteda)
dtx<-loadText(paste0(qddf$X1[nr],":",qddf$X3[nr]))
#dtx<-loadText(paste0(qddf$X1[nr],":",qddf$X3[nr])) #NO funct()
dictionaryStatistics(
d1,
fields = DramaAnalysis::base_dictionary[fieldnames],
fieldnames = c("Liebe"),
segment = c("Drama", "Act", "Scene"),
normalizeByCharacter = FALSE,
normalizeByField = FALSE,
byCharacter = TRUE,
column = "Token.lemma",
ci = TRUE
)
#dtx<-loadText(paste0(qddf$X1[nr],":",qddf$X3[nr])) #NO funct()
dictionaryStatistics(
d1,
segment = c("Drama", "Act", "Scene"),
normalizeByCharacter = FALSE,
normalizeByField = FALSE,
byCharacter = TRUE,
column = "Token.lemma",
ci = TRUE
)
#dtx<-loadText(paste0(qddf$X1[nr],":",qddf$X3[nr])) #NO funct()
dictionaryStatistics(
d1,
fieldnames = c("Liebe"),
fields = DramaAnalysis::base_dictionary[fieldnames],
segment = c("Drama", "Act", "Scene"),
normalizeByCharacter = FALSE,
normalizeByField = FALSE,
byCharacter = TRUE,
column = "Token.lemma",
ci = TRUE
)
#dtx<-loadText(paste0(qddf$X1[nr],":",qddf$X3[nr])) #NO funct()
fieldnames = c("Teufel"),
#dtx<-loadText(paste0(qddf$X1[nr],":",qddf$X3[nr])) #NO funct()
fieldnames = c("Teufel")
dictionaryStatistics(
d1,
fields = DramaAnalysis::base_dictionary[fieldnames],
segment = c("Drama", "Act", "Scene"),
normalizeByCharacter = FALSE,
normalizeByField = FALSE,
byCharacter = TRUE,
column = "Token.lemma",
ci = TRUE
)
dictionaryStatistics(
d1,
#  fields = DramaAnalysis::base_dictionary[fieldnames],
segment = c("Drama", "Act", "Scene"),
normalizeByCharacter = FALSE,
normalizeByField = FALSE,
byCharacter = TRUE,
column = "Token.lemma",
ci = TRUE
)
#dtx<-loadText(paste0(qddf$X1[nr],":",qddf$X3[nr])) #NO funct()
fieldnames = c("Teufel")
dictionaryStatistics(
d1,
#  fields = DramaAnalysis::base_dictionary[fieldnames],
segment = c("Drama", "Act", "Scene"),
normalizeByCharacter = FALSE,
normalizeByField = FALSE,
byCharacter = TRUE,
column = "Token.lemma",
ci = TRUE
)
dictionaryStatistics(
d1,
#  fields = DramaAnalysis::base_dictionary[fieldnames],
segment = c("Drama", "Act", "Scene"),
normalizeByCharacter = TRUE,
normalizeByField = FALSE,
byCharacter = TRUE,
column = "Token.lemma",
ci = TRUE
)
path = '/Users/guhl/Documents/GIT/ezdrama/sample.txt'
reticulate::repl_python()
